<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-16">
<title>WebGL - Experiment</title>
<link rel="stylesheet" type="text/css" href="/static/vendor/css/slick.grid.css?v=459dd2d912077e3463f80dfcef768141">
<link rel="stylesheet" type="text/css" href="/static/vendor/css/jquery-ui-1.11.3.custom.css?v=42468acb3ddfa7a28295e35d52f1abb9">
<link rel="stylesheet" type="text/css" href="/static/vendor/css/slick.grid.format.css?v=e6a868a89793281828f8cbe74125540b">
<link rel="stylesheet" type="text/css" href="/static/css/style.css?v=2a5538e3f6c4ab8d1f5364b63209645b">
<script type="text/javascript" src="/static/vendor/js/gl-matrix.min.js?v=38d0eb63158c9c26d4d2e6f1405e0751"></script>
<script type="text/javascript" src="/static/vendor/js/jquery-2.2.4.min.js?v=052806eeee49a85fb006eece489a8d1c"></script>
<script type="text/javascript" src="/static/vendor/js/jquery.event.drag-2.2.min.js?v=761bb3e053ce7bf2c41bdde132325c1f"></script>
<script type="text/javascript" src="/static/js/init_webgl.js?v=effd830a79ac869b5e41990bbe46b2a3"></script>
<script type="text/javascript" src="/static/js/callbacks.js?v=2be943534372dd6f1d76e318d450303b"></script>
<script type="text/javascript" src="/static/js/drawing_loop.js?v=b8485904c56020bf85dfead749938d23"></script>
<script type="text/javascript" src="/static/js/init_webpage.js?v=836919a96a1dd278d30c893a1e88d5a1"></script>
<script type="text/javascript" src="/static/vendor/js/slick.core.min.js?v=bfd44ce7e43f91cc7c7a9f839ea46216"></script>
<script type="text/javascript" src="/static/vendor/js/slick.editors.min.js?v=b60ab77f525ee4ddd4cf416bc23412e6"></script>
<script type="text/javascript" src="/static/vendor/js/slick.formatters.min.js?v=733d94f8e307fa2daee8c1374f127116"></script>
<script type="text/javascript" src="/static/vendor/js/slick.grid.min.js?v=e9389ff282178ac012e0d6ec5eeba5c9"></script>
</head>
<body>
<div class="container">
<canvas class="tree-surface">
Your browser does not support HTML5
</canvas>
<div id="divcontainer"></div>
</div>
<div class="metadata-tabs">
<div class="tab-options">
<div>
<button onclick="showMenu('highlight')">Highlight Tips</button>
</div>
<div>
<button onclick="showMenu('color')">Color Clade</button>
</div>
<div>
<button onclick="showMenu('subTree')">Sub Tree</button>
</div>
</div>
<div class="menu" id="highlight-menu">
<div id="highlight-input">
<div>
<select id = "highlight-options"></select>
</div>
<div>
<input id="select-highlight" type = "button" value = "select"/>
<input type = "color" id="color-selector" value="#ff0000"/>
</div>
<div class="text-field">
<label for="lower-bound">Lower Bound</label>
<input type="text" id="lower-bound"/>
</div>
<div class="text-field">
<label for="upper-bound">Upper Bound</label>
<input type="text" id="upper-bound"/>
</div>
<div class="text-field">
<label for="category">Equals to</label>
<input type="text" id="category"/>
</div>
</div>
<div id="color-input">
<div>
<input id="select-data" type="button" value="select" onclick="userCladeColor()"/>
<input type = "color" id="clade-color-selector" value="#ff0000"/>
</div>
<div class="text-field">
<label for="clade">clade/taxon</label>
<input type="text" id="clade"/>
</div>
</div>
</div>
</div>
<table>
<tr>
<td valign="top">
<div id="scrolltable"></div>
</td>
</tr>
</table>
<script type="text/javascript">
// urls for webserver
var urls = {
highlightURL: "http://" + window.location.host + "/highlight",
collapseURL: "http://" + window.location.host + "/collapse",
edgeURL: "http://" + window.location.host + "/api/edges",
colorURL: "http://" + window.location.host + "/color",
nodeURL: "http://"+ window.location.host + "/api/nodes",
tableURL: "http://" + window.location.host + "/table_values",
tableChangeURL: "http://" + window.location.host + "/table_change",
headersURL: "http://" + window.location.host + "/headers",
cladeColorURL: "http://" + window.location.host + "/color_clade",
subTreeURL: "http://" + window.location.host + "/subtree",
oldTreeURL: "http://" + window.location.host + "/oldtree"
};
// fields to extract from metadata, used in extractInfo()
let field = {
edgeFields: ["px", "py", "branch_color", "x", "y",
"branch_color"],
nodeFields: ["x", "y", "color"]
};
// stores matrices, and buffers that webgl will uses
let shaderProgram = {};
// the complied vertex/fragment shaders
let gl = {}; // webgl context - used to call webgl functions
// stores info need to draw such as vertex data
let drawingData = {
isMouseDown: false,
lastMouseX: null,
lastMouseY: null,
zoomAmount: 10,
maxZoom: 30,
coloredClades: []
};
let numAttr = 0;
let attrItem = {};
let grid = {};
let labels = {};
let labelPos = 0;
let gridInfo = {
initData: [],
data: [],
columns: [],
options: {},
grid: {}
};
const TRI_PER_ARC = 100;
const ELEMENTS_PER_VERT = 5;
const VERT_PER_TRI = 3;
let numUserSelects = 0;
const INIT_COLOR = "FFFFFF";
const CLEAR_COLOR_HEX = "C4C4C4";
const CLEAR_COLOR = 0.7686274509803922;
let camera = {};
</script>
<script type="text/javascript">
{
let edgeMetadata;
let nodeCoords;
// this may cause some syncing issues
$.getJSON(urls.headersURL, function(data) {
field.table_headers = data;
}).done(function() {
drawingData.nodeCoords = [0, 0, 0, 0, 0];
$.getJSON(urls.edgeURL, function(data) {
edgeMetadata = data;
}).done(function() {
fillDropDownMenu(field.table_headers.headers);
$("#highlight-input").hide();
$("#color-input").hide();
drawingData.edgeCoords = extractInfo(edgeMetadata, field.edgeFields);
normalizeTree(edgeMetadata);
$.getJSON(urls.tableURL, function(data) {
initGridTable(data);
});
initWebGl();
initCallbacks();
setPerspective();
requestAnimationFrame(loop);
});
});
}
</script>
</body>
</html>
