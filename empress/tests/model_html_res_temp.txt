<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-16">
<title>WebGL - Experiment</title>
<link rel="stylesheet" type="text/css" href="/static/vendor/css/slick.grid.css?v=459dd2d912077e3463f80dfcef768141">
<link rel="stylesheet" type="text/css" href="/static/vendor/css/jquery-ui-1.11.3.custom.css?v=42468acb3ddfa7a28295e35d52f1abb9">
<link rel="stylesheet" type="text/css" href="/static/vendor/css/slick.grid.format.css?v=e6a868a89793281828f8cbe74125540b">
<link rel="stylesheet" type="text/css" href="/static/css/style.css?v=52f3085bd2363b0b0071cb705c88473a">
<script type="text/javascript" src="/static/vendor/js/gl-matrix.min.js?v=2e2806f78ad6a835e53b0aba5ff11ea9"></script>
<script type="text/javascript" src="/static/vendor/js/jquery-2.2.4.min.js?v=052806eeee49a85fb006eece489a8d1c"></script>
<script type="text/javascript" src="/static/vendor/js/jquery.event.drag-2.2.min.js?v=761bb3e053ce7bf2c41bdde132325c1f"></script>
<script type="text/javascript" src="/static/js/init_webgl.js?v=1b446efc39f7de75860f2cae1b9629e3"></script>
<script type="text/javascript" src="/static/js/callbacks.js?v=593e29c86767aa1425da0393cb5ffb9c"></script>
<script type="text/javascript" src="/static/js/drawing_loop.js?v=ac82f95317204c43782436cb7013d733"></script>
<script type="text/javascript" src="/static/js/init_webpage.js?v=49d3e09ea50e29339b125b15bfcfdd79"></script>
<script type="text/javascript" src="/static/vendor/js/slick.core.min.js?v=bfd44ce7e43f91cc7c7a9f839ea46216"></script>
<script type="text/javascript" src="/static/vendor/js/slick.editors.min.js?v=b60ab77f525ee4ddd4cf416bc23412e6"></script>
<script type="text/javascript" src="/static/vendor/js/slick.formatters.min.js?v=733d94f8e307fa2daee8c1374f127116"></script>
<script type="text/javascript" src="/static/vendor/js/slick.grid.min.js?v=e9389ff282178ac012e0d6ec5eeba5c9"></script>
</head>
<body>
<div class="container">
<canvas class="tree-surface">
Your browser does not support HTML5
</canvas>
<div id="divcontainer"></div>
</div>
<div class="metadata-tabs">
<div class="tab-options">
<div>
<button class="tabs" onclick="showMenu(event,'highlight-menu')">Highlight Tips</button>
</div>
</div>
<div class="menu" id="highlight-menu">
<div>
<select id = "highlight-options"></select>
</div>
<div>
<input type = "button" value = "select" onclick = "userHighlightSelect();" />
<input type = "color" id="color-selector"/>
</div>
<div class="text-field">
<label for="lower-bound">Lower Bound</label>
<input type="text" id="lower-bound"/>
</div>
<div class="text-field">
<label for="upper-bound">Upper Bound</label>
<input type="text" id="upper-bound"/>
</div>
<div class="text-field">
<label for="category">Category Name</label>
<input type="text" id="category"/>
</div>
<div class="attr-selector">
</div>
</div>
</div>
<table>
<tr>
<td valign="top">
<div id="scrolltable"></div>
</td>
</tr>
<!-- <table id="dataTable">
</table> -->
</table>
<script type="text/javascript">
// global variables
var urls = { // urls for webserver
highlightURL : 'http://localhost:8080/highlight',
collapseURL : 'http://localhost:8080/collapse',
edgeURL : 'http://localhost:8080/api/edges',
colorURL : 'http://localhost:8080/color',
nodeURL : 'http://localhost:8080/api/nodes',
tableURL : 'http://localhost:8080/table_values',
labelURL : 'http://localhost:8080/label'
};
var field = {
edgeFields : ["px", "py", "branch_color", "x", "y",
"branch_color"],
nodeFields : ["x", "y", "color"]
};
var shaderProgram = {}; // the complied vertex/fragment shaders
var gl = {}; // webgl context - used to call webgl functions
var drawingData = { // stores info need to draw such as vertex data
isMouseDown : false,
lastMouseX : null,
lastMouseY : null,
zoomAmount : 1,
zoomLevel : 0,
scaleFactor : 5.0 / 4.0
};
var numAttr = 0;
var attrItem = {};
var labels = {};
</script>
<script type="text/javascript">
{
let edgeMetadata;
let nodeCoords;
// this may cause some syncing issues
$.getJSON(urls.nodeURL, function(data) {
nodeCoords = data;
}).done(function() {
drawingData.nodeCoords = extractInfo(nodeCoords, field.nodeFields);
$.getJSON(urls.edgeURL, function(data) {
edgeMetadata = data;
}).done(function() {
initWebPage(edgeMetadata);
drawingData.edgeCoords = extractInfo(edgeMetadata,field.edgeFields);
drawingData.largeDim = normalizeTree(edgeMetadata);
initWebGl();
initCallbacks();
setProjMat();
draw();
});
});
}
</script>
</body>
</html>
